{
    "updated_cases": [
        {
            "id": 1535918,
            "title": "Validate Egress Healthcheck failure for both Egress GW being down; when \"egress-footprint-userhash-lb\" enabled",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 7,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Health check failure for both egress GW, traffic sent using proxy IP as Source IP",
            "custom_preconds": "Egress Healthcheck validation, when both Egress GW down; when \"egress-footprint-userhash-lb\" enabled",
            "custom_steps": "1. Simulate Egw health check failure for both Egress GWs using IP firewall rule to drop packet (sudo iptables -A INPUT -s <HC1_HOST_IP> -j DROP)\n2.  Validate healthcheck api failure for both Egress GW  (curl -v http://<HC1_HOST_IP>:8080/api/v0.1/egw/health ); returns connection time out \n3. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from proxy default ip assignment\n4. Revert IP firewall rules [sudo iptables -D INPUT -s <HC1_HOST_IP> -j DROP]\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment fallback to original EGW",
            "custom_expected": "1. Simulate Egw health check failure for both Egress GWs using IP firewall rule to drop packet (sudo iptables -A INPUT -s  -j DROP)\n2.  Validate healthcheck api failure for both Egress GW  (curl -v http://:8080/api/v0.1/egw/health ); returns connection time out \n3. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from proxy default ip assignment\n4. Revert IP firewall rules [sudo iptables -D INPUT -s  -j DROP]\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment fallback to original EGW",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535919,
            "title": "Validate new and existing traffic flows upon serving EGW goes down",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 8,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate new and existing traffic flows upon serving EGW goes down",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + IP Sensitive Server -EGW Flapping between up and down.",
            "custom_steps": "1. Traffic- Flow 1  going thru EGW1\n2. Bring down EGW1, observe the traffic(Flow 1) behaviour for the user and check what happens.\n3. Initiate new traffic(Flow2 )that goes thru EGW2\n4. Now bring back EGW1, check the traffic (Flow 1 and Flow 2)\n5. Initiate Trafic flow 3 with different user-hash (Flow3), validate served by EGW2\n6. Bring down  EGW2, observer the traffic for Flow3\n7. Initiate new traffic (Flow4) that goes thru EGW1 and confirm behaviour for traffic (Flow 1 - Flow 4)\n8. Bring up EGW2",
            "custom_expected": "1. Validate EGW1 IP assignment as Source IP and capture so_mark and user-hash from proxy logs\n2. Validate when EGW1 goes down, traffic flow 1 served by another working EGW2 and so_marl value update in logs\n3. Validate Traffic flow 2 serverd by egw2 and having so_mark value associated to egw2\n4. When EGW1 comes online, expecatation is, both traffic flows for the same user-hash switch back to EGW1\n5. Initiate Trafic flow 3 with different user-hash (Flow3), validate served by EGW2\n6. When egw2 goes down, tarffic Flow 3 expected to switch to EGW1 \n7. For all traffic flows; it should be served by working EGW1\n8. When both EGWs are back online; Traffic flow should serve by original EGWs [for same(uniq) user-hash as flow 1 - served by EGW1, Flow3 [different user-hash ] served by EGW2]",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535920,
            "title": "Validate SSL DND policy with \"egress-footprint-userhash-lb\" enabled and both EGW working",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 9,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate SSL DND policy with \"egress-footprint-userhash-lb\" enabled and both EGW working",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled +SSL DND-(Domain/Category/Network location) [Bypass at Nsproxy] - After authentication the DND option when acted upon, do they adhere the userhaship - Regular condition",
            "custom_steps": "1. Create SSL DND policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL DND policy applied and page events generated.",
            "custom_expected": "1. Create SSL DND policy (Domain/Category/Network location/User) \n2. Capture so_mark and user-hash from proxy logs\n3. Validate consistent user-hash and so_mark noted for the entire traffic flow and login works as expected.\n4. Validate SSL DND policy applied and page events generated.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535921,
            "title": "Validate SSL DND policy with \"egress-footprint-userhash-lb\" enabled , when serving EGW goes down",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 10,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate SSL DND policy with \"egress-footprint-userhash-lb\" enabled , when serving EGW goes down",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled +SSL DND-(Domain/Category/Network location) [Bypass at Nsproxy] - After authentication the DND option when acted upon, do they adhere the userhaship - EGW Pinned for some traffic and then pinned EGW goes down",
            "custom_steps": "1. Create SSL DND policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL DND policy applied and page events generated.\n5. Bring up the EGW and validate traffic flow switch back to original EGW and update so_mark value to original value.",
            "custom_expected": "1. Create SSL DND policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL DND policy applied and page events generated.\n5. Bring up the EGW and validate traffic flow switch back to original EGW and update so_mark value to original value.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535922,
            "title": "Validate SSL Decrypt policy with \"egress-footprint-userhash-lb\" enabled and both EGW working",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 11,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate SSL Decrypt policy with \"egress-footprint-userhash-lb\" enabled and both EGW working",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + URL bypass at NsProxy(SSL Decrypt)- Regular condition",
            "custom_steps": "1. Create SSL decrypt policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt policy applied and page events generated.",
            "custom_expected": "1. Create SSL decrypt policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt policy applied and page events generated.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535923,
            "title": "Validate SSL Decrypt policy with \"egress-footprint-userhash-lb\" enabled , when serving EGW goes down",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 12,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate SSL Decrypt policy with \"egress-footprint-userhash-lb\" enabled , when serving EGW goes down",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + URL bypass at NsProxy(SSL Decrypt)- EGW Pinned for some traffic and then pinned EGW goes down",
            "custom_steps": "1. Create SSL decrypt policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt policy applied and page events generated.\n5. Bring up the EGW and validate traffic flow switch back to original EGW and update so_mark value to original value.",
            "custom_expected": "1. Create SSL decrypt policy (Domain/Category/Network location/User) \n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt policy applied and page events generated.\n5. Bring up the EGW and validate traffic flow switch back to original EGW and update so_mark value to original value.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535924,
            "title": "Validate RTP with \"egress-footprint-userhash-lb\" enabled and both EGW working",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 13,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate RTP with \"egress-footprint-userhash-lb\" enabled and both EGW working",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + URL bypass at NsProxy(SSL Decrypt) +RTP -Regular condition",
            "custom_steps": "1. Create SSL decrypt policy (Domain/Category/Network location/User) + RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.",
            "custom_expected": "1. Create SSL decrypt policy (Domain/Category/Network location/User) + RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535925,
            "title": "Validate RTP with \"egress-footprint-userhash-lb\" enabled, when serving EGW goes down",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 14,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate RTP with \"egress-footprint-userhash-lb\" enabled, when serving EGW goes down",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + URL bypass at NsProxy(SSL Decrypt) +RTP -EGW Pinned for some traffic and then pinned EGW goes down.",
            "custom_steps": "1. Create SSL decrypt policy (Domain/Category/Network location/User) +  RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login and sebsequent requests work as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.\n5. Bring up the EGW and validate traffic flow again and valodate RT policy applied.",
            "custom_expected": "1. Create SSL decrypt policy (Domain/Category/Network location/User) +  RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.\n5. Bring up the EGW and validate traffic flow switch back to original EGW and update so_mark value to original value.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535926,
            "title": "Validate RTP with \"egress-footprint-userhash-lb\" enabled and both EGW working with Edgensproxy node using Proxy chaining and explicit proxy access method",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 15,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate RTP with \"egress-footprint-userhash-lb\" enabled and both EGW working with Edgensproxy node using Proxy chaining and explicit proxy access method",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + URL bypass at NsProxy(SSL Decrypt) +RTP + with PXC/Explicit proxy access method -Regular condition",
            "custom_steps": "1. Create SSL decrypt policy (Domain/Category/Network location/User) + RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.",
            "custom_expected": "1. Create SSL decrypt policy (Domain/Category/Network location/User) + RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535927,
            "title": "Validate RTP with \"egress-footprint-userhash-lb\" enabled, when serving EGW goes down; using Proxy chaining and explicit proxy access method",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855994,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 16,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate RTP with \"egress-footprint-userhash-lb\" enabled, when serving EGW goes down; using Proxy chaining and explicit proxy access method",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + URL bypass at NsProxy(SSL Decrypt) +RTP + PXC/Explicit proxy access method -EGW Pinned for some traffic and then pinned EGW goes down.",
            "custom_steps": "1. Create SSL decrypt policy (Domain/Category/Network location/User) +  RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login and sebsequent requests work as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.\n5. Bring up the EGW and validate traffic flow again and valodate RT policy applied.",
            "custom_expected": "1. Create SSL decrypt policy (Domain/Category/Network location/User) +  RT policy for CloudAPP to Alert/block Action\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate health check failure for serving EGW and validate traffic flow switched to working EGW and capture updated so_mark value.\n3. Validate consistent user-hash noted for the entire traffic flow and login works as expected.\n4. Validate SSL decrypt and RT policy applied and SkopeIT Alert and page events generated.\n5. Bring up the EGW and validate traffic flow switch back to original EGW and update so_mark value to original value.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        }
    ]
}