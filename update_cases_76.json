{
    "updated_cases": [
        {
            "id": 1535560,
            "title": "Validate policy_v2.json should have \"continue_policy_evaluation\" boolean field for each policy when feature enabled\nUpdate: Validate policy_v2.json should have \"continue\" field for each DLP Profile has \"action : Alert\".",
            "section_id": 105408,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 1,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": null,
            "custom_steps": "1. Create RT policy with DLP Profiles P1, P2 \n2. Select checkbox, \"Set action for each profile\" Select Action as Alert for at least 1 profile \n3. Select checkbox \"continue policy evalution after policy match\"",
            "custom_expected": "Review the policy_v2.json in tenant directory\nEach policy should have field \"continue_policy_evaluation\": true/false correctly\nUpdate: Each DLP Profile having \"Action: alert\" should have \"continue\" field as True.\nBased on new requested changes, there should Not have \"\"continue_policy_evaluation\" field per policy.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535565,
            "title": "Validate RT policy regression",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": "Resolved this ticket and validated.",
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 1,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Proxy issue: https://netskope.atlassian.net/browse/ENG-183066",
            "custom_steps": "1. Create RT policies with action Alert; activity:upload/download. Generate upload/download tarffic matching DLP profile",
            "custom_expected": "Validate policy match works as expcted\nSkopeIT alert shows policy and DLP alerts correctly",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535566,
            "title": "Validate All profiles matches",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": "DLP Issue:https://netskope.atlassian.net/browse/ENG-183589",
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 2,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "6/9/22, 4:26 PM\nPolicy\nAlert Name:\nScenario1_rule2\nPolicy Name:\nScenario1_rule1, Scenario1_rule2\nAcknowledged:\nfalse\nAction:\nblock",
            "custom_steps": "1. Create RT policies mentioned in scenario 1\n2. Generate upload/download tarffic matching DLP profile p1, p2 and p3",
            "custom_expected": "All profiles match\nDLP returns - { R1,p1 : continue=true; R1,p2 : continue=true; R2,p3 }\nProxy generates Alerts for R1 and R2 and executes a Block based on R2.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535567,
            "title": "Only p1 or p2 match",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 3,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "6/9/22, 4:31 PM\nPolicy\nAlert Name:\nScenario1_rule3\nPolicy Name:\nScenario1_rule1, Scenario1_rule3\nAcknowledged:\nfalse\nAction:\nblock",
            "custom_steps": "1. Create RT policies mentioned in scenario 1\n2. Generate upload/download tarffic matching DLP profile p1 and p2 , not p3",
            "custom_expected": "Only p1 or p2 match \nDLP returns - { R1,p1 : continue=true } or { R1,p2 : continue=true } \nProxy generates Alerts for R1 and R3 and executes the block based on R3.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535568,
            "title": "Only p3 matches",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 4,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "6/9/22, 4:32 PM\nPolicy\nAlert Name:\nScenario1_rule2\nPolicy Name:\nScenario1_rule2\nAcknowledged:\nfalse\nAction:\nblock",
            "custom_steps": "1. Create RT policies mentioned in scenario 1\n2. Generate upload/download tarffic matching DLP profile p3 only",
            "custom_expected": "Only p3 matches \nDLP returns - { R2,p3 } \nProxy generates Alert for R2 and executes the block based on R2.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535569,
            "title": "None of the profiles match",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 5,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "6/9/22, 4:33 PM\nPolicy\nAlert Name:\nScenario1_rule3\nPolicy Name:\nScenario1_rule3\nAcknowledged:\nfalse\nAction:\nblock",
            "custom_steps": "1. Create RT policies mentioned in scenario 1\n2. Generate upload/download tarffic of non DLP sensitive data",
            "custom_expected": "None of the profiles match \nDLP returns - {} \nProxy generates Alert for R3 and executes the block based on R3.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535570,
            "title": "Validate All profiles matches",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 6,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Policy\nAlert Name:\nScenario2_rule2\nPolicy Name:\nScenario2_rule1, Scenario2_rule2\nAcknowledged:\nfalse\nAction:\nallow",
            "custom_steps": "1. Create RT policies mentioned in scenario 1\n2. Generate upload/download tarffic matching DLP profile p1, p2 and p3",
            "custom_expected": "All profiles match\nDLP returns - { R1,p1 : continue=true; R1,p2 : continue=true; R2,p3 }\nProxy generates Alert for R1 and executes the Allow based on R2.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535571,
            "title": "Only p1 or p2 match",
            "section_id": 105409,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328480,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 7,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Policy\nAlert Name:\nScenario2_rule3\nPolicy Name:\nScenario2_rule1, Scenario2_rule3\nAcknowledged:\nfalse\nAction:\nblock",
            "custom_steps": "1. Create RT policies mentioned in scenario 1\n2. Generate upload/download tarffic matching DLP profile p1 and p2 , not p3",
            "custom_expected": "Only p1 or p2 match \nDLP returns - { R1,p1 : continue=true } or { R1,p2 : continue=true }\nProxy generates Alerts for R1 and R3 and executes the Block based on R3.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535953,
            "title": "Verify HC api failure do failover to available EGW nat host; when Enabled the feature flag egress-ip-bypass-proxy and verify egress IP feature works for cert pinned apps + egress-footprint-userhash-lb FF enabled",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 8,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate traffic flow with \"egress-ip-bypass-proxy\" and \"egress-footprint-userhash-lb\" enabled, with IPS/CTEP and when serving EGW goes down",
            "custom_preconds": null,
            "custom_steps": "1. Enable \"egress-ip-bypass-proxy\" and \"egress-footprint-userhash-lb\" and \"ips\" FF on the tenant\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate EGW health check failure and observe existing traffic flow and new flow \n3. Validate consistent user-hash and updated so_mark from EGW2 noted for the entire traffic flow \n4. Iniatiate traffic flow to malware site and validate IPS alerts generated with appropriate actions\n5. Bring EGW1 back online and review user-hash and so_mark value for the traffic flow",
            "custom_expected": "1. Validate \"egress-ip-bypass-proxy\" and \"egress-footprint-userhash-lb\" and \"ips\" FF enabled on the tenant in feature_config.json\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate serving EGW1 health check failure and expected to have new and existing traffic flow served by EGW2\n3. Validate consistent user-hash and updated so_mark from EGW2 noted \n4. Iniatiate traffic flow to malware site and validate IPS alerts generated with appropriate actions\n5. Bring EGW1 back online and review user-hash and so_mark value for the traffic flow updated to EGW1 again",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535954,
            "title": "Verify both HC api failure do failover to proxy public IP (Non DEI); when Enabled the feature flag egress-ip-bypass-proxy and verify egress IP feature works for cert pinned apps + egress-footprint-userhash-lb FF enabled",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856012,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 9,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify both HC api failure do failover to proxy public IP (Non DEI); when Enabled the feature flag egress-ip-bypass-proxy and verify egress IP feature works for cert pinned apps [with egress-footprint-userhash-lb FF enabled, IPS Enabled]",
            "custom_preconds": null,
            "custom_steps": "1. Simulate Egw health check failure for both Egress GWs using IP firewall rule to drop packet (sudo iptables -A INPUT -s <HC1_HOST_IP> -j DROP)\n2.  Validate healthcheck api failure for both Egress GW  (curl -v http://<HC1_HOST_IP>:8080/api/v0.1/egw/health ); returns connection time out \n3. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from proxy default ip assignment\n4. Revert IP firewall rules [sudo iptables -D INPUT -s <HC1_HOST_IP> -j DROP]\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment fallback to original EGW",
            "custom_expected": "1. Simulate Egw health check failure for both Egress GWs using IP firewall rule to drop packet (sudo iptables -A INPUT -s <HC1_HOST_IP> -j DROP)\n2.  Validate healthcheck api failure for both Egress GW  (curl -v http://<HC1_HOST_IP>:8080/api/v0.1/egw/health ); returns connection time out \n3. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from proxy default ip assignment\n4. Revert IP firewall rules [sudo iptables -D INPUT -s <HC1_HOST_IP> -j DROP]\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment ifallback to original EGW",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        }
    ]
}