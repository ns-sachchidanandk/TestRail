{
    "updated_cases": [
        {
            "id": 1651362,
            "title": "Validate SSL DND traffic with pxc/ep-proxy  Access method; Applied Dedicated EgressIP on Nsproxy ; No change in behavior; With empty egerss IP policy",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 86,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Edge-nsproxy/SSL DND traffic",
            "custom_steps": "- Create an empty Egress IP policy\r\n- Create and SSL DND policy for a domain/category/ supported attribute\r\n- Route the traffic through pxc access method for a domain configured in SSL DND policy\r\n- Review that DEI is being applied, as empty policy is egressip match.",
            "custom_expected": "- Create SSL DND policy (Domain/Category/Network location/User) \r\n- Capture so_mark and user-hash from proxy logs and validate DEI is applied\r\n- Validate SSL DND policy applied and page events generated.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651363,
            "title": "Validate Bypass settings as NO SNI/ self service cert - Bypass ,  Egress IP policy match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 1,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 87,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Bypass Settings",
            "custom_steps": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Bypass\r\n- Route the traffic through NS-Client to badssl.com tests\r\n- Review that  DEI is being applied, only if egressIP policy match.",
            "custom_expected": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Bypass\r\n- Route the traffic through NS-Client to badssl.com tests\r\n-  DEI is being applied, only if egressIP policy match.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651364,
            "title": "Validate Bypass settings as NO SNI/ self service cert - Block,  Egress IP policy match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 1,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 88,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Bypass Settings",
            "custom_steps": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Block action\r\n- Route the traffic through NS-Client to badssl.com tests\r\n- Review that  DEI is being applied, only if egressIP policy match.",
            "custom_expected": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Block\r\n- Route the traffic through NS-Client to badssl.com tests\r\n-  DEI is being applied, only if egressIP policy match.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651365,
            "title": "Validate Bypass settings as NO SNI/ self service cert - Bypass ,  Egress IP policy Does Not match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 1,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 89,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Bypass Settings",
            "custom_steps": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Bypass\r\n- Route the traffic through NS-Client to badssl.com tests\r\n- Review that DEI is NOT applied, WHEN egressIP policy is not matched",
            "custom_expected": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Bypass\r\n- Route the traffic through NS-Client to badssl.com tests\r\n- DEI is NOT applied, WHEN egressIP policy is not matched",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651366,
            "title": "Validate Bypass settings as NO SNI/ self service cert - Block,  Egress IP policy does NOT match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 1,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 90,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Bypass Settings",
            "custom_steps": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Block action\r\n- Route the traffic through NS-Client to badssl.com tests\r\n- Review that DEI is NOT applied, WHEN egressIP policy is not matched",
            "custom_expected": "- Create Egress IP policy; with combination of supported attributes\r\n- Review bypass settings for NO-SNI/self-service-cert as Block\r\n- Route the traffic through NS-Client to badssl.com tests\r\n- DEI is NOT applied, WHEN egressIP policy is not matched",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651369,
            "title": "Validate Workflow with IPS enabled + Userhashlb FF enabled , egress IP policy match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939999,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 93,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "NSProxy/IPS",
            "custom_steps": "- Enable the IPS FF + Userhashlb FF enabled\n- Create an egress IP policy with  supported attribute combinations\n- Route multiple traffic flows to proxy Matching one of the conditions configured on EgressIP policy\n- enable debug logs for httpdump 3 on proxy B\n- Review X-NS-FLOW-DATA headers [\u00e2\u20ac\u0153egress_policy\":\"dei\"] on proxy B [from IPS to proxy]\n- Review appmodule 3 logs to see SAME so_mark is picked based on Unique hash\n- Review policy 1 logs, to see EgressIP policy is being picked and egressIP so_mark is applied.",
            "custom_expected": "- Verify Expected IPS Rule being applied\n- In terms of DEIP , look for debug logs to find X-NS-FLOW-DATA headers has [\u00e2\u20ac\u0153egress_policy\":\"dei\"] on proxy B; when expected to see DEI applied upon policy match\n- Verify no regression on with traffic flow.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651370,
            "title": "Validate Workflow with IPS enabled + Userhashlb FF enabled, egress IP policy doesn't match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939999,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 94,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "NSProxy/IPS",
            "custom_steps": "- Enable the IPS FF + Userhashlb FF enabled\n- Create an egress IP policy with  supported attribute combinations\n- Route multiple traffic flows to proxy DOES NOT Match any of the conditions configured on EgressIP policy\n- enable debug logs for httpdump 3 on proxy B\n- Review X-NS-FLOW-DATA headers [\u00e2\u20ac\u0153egress_policy\":\"other\"] on proxy B\n- Review appmodule 3 logs to see so_mark is not picked \n- Review policy 1 logs, to see EgressIP policy is not matched  and egressIP so_mark is not applied.",
            "custom_expected": "- Verify Expected IPS Rule being applied\n- In terms of DEIP , look for debug logs to find X-NS-FLOW-DATA headers has [\u00e2\u20ac\u0153\u00e2\u20ac\u0153egress_policy\":\"other\"] on proxy B; when DEI is NOT applied, no Egress IP matched.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651371,
            "title": "Validate multiple requests on same connection; first NON-DEIP match and 2nd request DEIP policy match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939999,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 95,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "NSProxy",
            "custom_steps": "- Setup egressIP policy using custom category; add URL [eg. \"https://www.example.com/products\"] only to match DEIP \n- Create connection domain  https://www.example.com or https://www.example.com/news; which does be NON-DEIP match and hence connection established using non-deip / other\n- Send another request to https://www.example.com/products ; this should match egressip policy ; however due to existing connection as non-deip; no SO_MARK will be applied.\n- Review logs: trid=$(grep 'example.com' <log_file> | grep -o 'trid=[0-9]\\+'  | sort -u); grep 'trid=$trid' <log_file> | grep -C 3 'so_mark' -> result should be none",
            "custom_expected": "- Setup egressIP policy using custom category; add URL [eg. \"https://www.example.com/products\"] only to match DEIP \n- Create connection domain  https://www.example.com or https://www.example.com/news; which does be NON-DEIP match and hence connection established using non-deip / other\n- another request to https://www.example.com/products ; this should match egressip policy ; however due to existing connection as non-deip; no SO_MARK will be applied.  \n- log shows: \"Back conn already established. policyResult:'Dedicated Egress IP' domain:www.example.com backPolicyDEI:0 backDomain:www.example.com backSNI: footprintID:0 soMark:0\"\n- Review logs: trid=$(grep 'example.com' <log_file> | grep -o 'trid=[0-9]\\+'  | sort -u); grep 'trid=$trid' <log_file> | grep -C 3 'so_mark' -> result should be none",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651372,
            "title": "Validate multiple requests on same connection; first DEIP policy match and 2nd request non-DEIP policy match",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939999,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 96,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "NSProxy",
            "custom_steps": "- Setup egressIP policy using custom category; add URL [eg. \"https://www.example.com/products\"] only to match DEIP \n- Create connection domain https://www.example.com/products; which  match DEIP policy and hence connection established using deip; look for so_mark logs in appmodule logs\n- Send another request to https://www.example.com/news ; this shouldn't match egressip policy ; however due to existing connection as deip; it should use SAME UNIQ SO_MARK as first request \n[log: Back conn already established. policyResult:'Other Egress IP' domain:www.example.com backPolicyDEI:1 backDomain:www.example.com backSNI: footprintID:2416443392 soMark:10] \n- Review logs: trid=$(grep 'example.com' <log_file> | grep -o 'trid=[0-9]\\+'  | sort -u); grep 'trid=$trid' <log_file> | grep -C 3 'so_mark' -> result should be show so_mark applied for at least first request\n[Discussing with Seth on should it show so_mark for 2nd request or not]",
            "custom_expected": "- Setup egressIP policy using custom category; add URL [eg. \"https://www.example.com/products\"] only to match DEIP \n- Create connection domain https://www.example.com/products; which  match DEIP policy and hence connection established using deip; look for so_mark logs in appmodule logs\n- Send another request to https://www.example.com/news ; this shouldn't match egressip policy ; however due to existing connection as deip; it should use SAME UNIQ SO_MARK as first request \n[log: Back conn already established. policyResult:'Other Egress IP' domain:www.example.com backPolicyDEI:1 backDomain:www.example.com backSNI: footprintID:2416443392 soMark:10] \n- Review logs: trid=$(grep 'example.com' <log_file> | grep -o 'trid=[0-9]\\+'  | sort -u); grep 'trid=$trid' <log_file> | grep -C 3 'so_mark' -> result should be show so_mark applied for at least first request\n[Discussing with Seth on should it show so_mark for 2nd request or not]",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651373,
            "title": "Validate multiple requests on same connection; first DEIP policy match and 2nd request non-DEIP policy match; HC failure on active so_mark host; uniq_userhashlb FF enabled",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 16,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939999,
            "updated_by": 729,
            "updated_on": 1736856004,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 97,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "NSProxy",
            "custom_steps": null,
            "custom_expected": null,
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        }
    ]
}