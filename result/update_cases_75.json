{
    "updated_cases": [
        {
            "id": 1535946,
            "title": "Verify egress-ip-bypass-proxy is disabled by default",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": "ENG-224332",
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 1,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify tenant level feature flag 'egress-ip-bypass-proxy' is disabled by default and cert pinned + Tunnel mode traffic routed through TCP Bypass Listner egress IP feature is not supported",
            "custom_preconds": null,
            "custom_steps": "1. Configure Cert pinned app and add exception list with tunnel mode enabled\r\n2. Route the traffic from cert pinned app, run ifconfig.me command",
            "custom_expected": "1. Verify for TCP Bypass traffic,  egress IP feature is not supported , when default Feature flag is disabled. \r\n2. Verify ifconfig.me output returns proxy IP, not from egress NAT hosts.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535947,
            "title": "Verify egress IP feature is not supported with cert pin add when egress-ip-bypass-proxy is false",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 2,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify tenant level feature flag 'egress-ip-bypass-proxy' is disabled by default and cert pinned + Tunnel mode traffic routed through TCP Bypass Listner egress IP feature is not supported",
            "custom_preconds": null,
            "custom_steps": "1. Configure Cert pinned app and add exception list with tunnel mode enabled\n2. Route the traffic from cert pinned app, run ifconfig.me command",
            "custom_expected": "1. Verify for TCP Bypass traffic,  egress IP feature is not supported , when Feature flag is disabled. \n2. Verify ifconfig.me output returns proxy IP, not from egress NAT hosts.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535948,
            "title": "Verify egress IP feature is not supported with cert pin add when egress-ip-bypass-proxy is false; traffic bypass proxy fine - No RT policy applied; no regression",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 3,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify tenant level feature flag 'egress-ip-bypass-proxy' is disabled by default and cert pinned + Tunnel mode traffic routed through TCP Bypass Listner egress IP feature is not supported + No RTP applied as traffic getting bypassed",
            "custom_preconds": null,
            "custom_steps": "1. Configure Cert pinned app and add exception list with tunnel mode enabled\n2. Configure RT policy to block/alert traffic\n2. Route the traffic from cert pinned app, run ifconfig.me command",
            "custom_expected": "1. Verify for TCP Bypass traffic,  egress IP feature is not supported , when Feature flag is disabled. \n2. Verify ifconfig.me output returns proxy IP, not from egress NAT hosts.\n3. Verify RT policy is NOT applied and page event generated for routed tarffic.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535949,
            "title": "Verify Enable the feature flag egress-ip-bypass-proxy",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 4,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify tenant Level Feature flag is enabled and updated in feature_config.json",
            "custom_preconds": null,
            "custom_steps": "1. Run provisioner API to enabled feature flag",
            "custom_expected": "Verify tenant Level Feature flag is enabled and updated in feature_config.json",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535951,
            "title": "Enable the feature flag egress-ip-bypass-proxy and verify egress IP feature works for cert pinned apps  + egress-footprint-userhash-lb FF enabled ; uniq userhash-lb applied .",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 6,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify tenant level feature flag 'egress-ip-bypass-proxy' is enabled and Egress IP applied based on uniq user hash [with egress-footprint-userhash-lb FF Enabled]",
            "custom_preconds": null,
            "custom_steps": "1. Configure Cert pinned app and add exception list with tunnel mode enabled\n2. Route the traffic from cert pinned app, run ifconfig.me command",
            "custom_expected": "1. Verify for TCP Bypass traffic, egress IP feature is enabled and applied , when Feature flag is enabled. \n2. Verify ifconfig.me output returns configured public egress ip from egress NAT hosts in uniq user hash based IP.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535952,
            "title": "Enable the feature flag egress-ip-bypass-proxy and verify egress IP feature works for cert pinned apps + egress-footprint-userhash-lb FF enabled, + IPS Enabled; uniq userhash-lb applied .",
            "section_id": 105400,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328487,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 7,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify tenant level feature flag 'egress-ip-bypass-proxy' is enabled and Egress IP applied based on uniq user hash + egress-footprint-userhash-lb FF Enabled + IPS",
            "custom_preconds": null,
            "custom_steps": "1. Configure Cert pinned app and add exception list with tunnel mode enabled\n2. Route the traffic from cert pinned app, run ifconfig.me command",
            "custom_expected": "1. Verify for TCP Bypass traffic, egress IP feature is enabled and applied , when Feature flag is enabled. \n2. Verify ifconfig.me output returns configured public egress ip from egress NAT hosts in uniq user hash based IP.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 2184415,
            "title": "Verify pop Negate condition in full egressip policies",
            "section_id": 125298,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 398,
            "created_on": 1727123650,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 25,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 5,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": 2,
            "custom_sub_component": 1,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": null,
            "custom_steps": "- Create tenant_footprint.json with two footprint both enabled\r\n- Create DEIP policy with \r\n     \"pop\": [\"HIPPO\", \"US-SEA1\",\r\n    \"CO-BOG1\"]\r\n     \"negate_pop\": true,\r\n     \"egress_ip_type\": dedicated, one footprint\r\n     \r\n- Create DEIP policy with \r\n   \"pop\": [\"HIPPO\", \"US-SEA1\",\r\n    \"CO-BOG1\"]\r\n  \"egress_ip_type\": shared\r\n- Send traffic to match the policy for listed pop\r\n- First DEIP policy should match will negate pop and hence second policy should hit and corresponding IP is used",
            "custom_expected": "- First DEIP policy should match will negate pop and hence second policy should hit and corresponding IP is used",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 2184416,
            "title": "Verify pop Negate condition with combination groups [customer scenario]  in full egressip policies",
            "section_id": 125298,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 398,
            "created_on": 1727123681,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 26,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 5,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": 2,
            "custom_sub_component": 1,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": null,
            "custom_steps": "- Create tenant_footprint.json with two footprint both enabled\r\n- Create DEIP policy with \r\n     \"pop\": [\"HIPPO\", \"US-SEA1\",\r\n    \"CO-BOG1\"]\r\n     \"negate_pop\": true,\r\n     \"group_col\": [\r\n                \"corp_group_A\",\r\n                \"corp_group_B\"\r\n            ],\r\n     \"egress_ip_type\": dedicated, one footprint\r\n     \r\n- Create DEIP policy with \r\n   \"pop\": [\"HIPPO\", \"US-SEA1\",\r\n    \"CO-BOG1\"]\r\n\"group_col\": [\r\n                \"corp_group_A\",\r\n                \"corp_group_B\"\r\n            ],\r\n  \"egress_ip_type\": shared\r\n- Send traffic to match the policy for listed pop and user in group listed\r\n- send second traffic to match the policy for non-listed pop and user in group listed",
            "custom_expected": "- First flow DEIP policy should match will negate pop and hence second policy should hit and corresponding IP is used\r\n- Second flow, DEIP policy should match and corresponding IP is used",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 2184417,
            "title": "Verify Access Method condition in full egressip policies [Specially test with IPsec/GRE - customer usecase]",
            "section_id": 125298,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 398,
            "created_on": 1727123718,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 27,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 5,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": 2,
            "custom_sub_component": 1,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": null,
            "custom_steps": "- Create tenant_footprint.json with two footprint both enabled\r\n- Create DEIP policy with \r\n     \"access_method\": [\r\n    \"Client\",\r\n    \"Explicit Proxy\",\r\n    \"GRE\",\r\n    \"IPSec\"\r\n],\r\n     \"egress_ip_type\": dedicated, one footprint\r\n     \r\n- Send traffic to match the policy\r\n- First policy should match and corresponding IP should be used",
            "custom_expected": "- First DEIP policy should match and corresponding IP is used",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 2184418,
            "title": "Verify pop condition in full egressip policies FOR SSL DND Traffic flow",
            "section_id": 125298,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": null,
            "created_by": 398,
            "created_on": 1727123754,
            "updated_by": 729,
            "updated_on": 1736856010,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 28,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 5,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": 2,
            "custom_sub_component": 1,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": null,
            "custom_steps": "- Create tenant_footprint.json with two footprint both enabled\r\n- Create DEIP policy with \r\n     \"pop\": [\"HIPPO\", \"US-SEA1\",\r\n    \"CO-BOG1\"]\r\n     \"egress_ip_type\": dedicated, one footprint\r\n     \r\n- Create DEIP policy with \r\n   \"pop\": [\"HIPPO\" , \"US-SEA1\",\r\n    \"CO-BOG1\"]\r\n  \"egress_ip_type\": shared\r\n- Create SSL DND for specified userGroup\r\n- Send traffic to match the SSL DND policy and DEIP first policy\r\n- First policy should match and corresponding IP should be used",
            "custom_expected": "- First DEIP policy should match and corresponding IP is used",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        }
    ]
}