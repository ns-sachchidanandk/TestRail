{
    "updated_cases": [
        {
            "id": 1535722,
            "title": "Test the egress IP with proxy chaining access method PDV",
            "section_id": 105399,
            "template_id": 1,
            "type_id": 18,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328483,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 1,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 1,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "web request using proxy chaining access method returns Egress nat ip",
            "custom_preconds": null,
            "custom_steps": "1. enable the dedicated IP feature\r\n2. access any website on the client machine running proxy chaining\r\n3. check the source ip of the request (eg. ifconfig.me)",
            "custom_expected": "The source ip should be on of the ip addresses in dedicated ip pool\r\n\r\n",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535723,
            "title": "Test the egress IP with Explicit Proxy access method PDV",
            "section_id": 105399,
            "template_id": 1,
            "type_id": 18,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328483,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 2,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 1,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "web request using explicit proxy access method with SAML AUTH enabled returns Egress nat ip",
            "custom_preconds": null,
            "custom_steps": "enable the dedicated IP feature\r\naccess any website with proxy as edge proxy vip as explicit proxy access method port 8081 with saml auth enabled\r\ncheck the source ip of the request (eg. ifconfig.me)",
            "custom_expected": "The source ip should be on of the ip addresses in dedicated ip pool",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535928,
            "title": "Validate traffic flow with IPS/CTEP with \"egress-footprint-userhash-lb\" enabled, and both EGW working - Regular condition",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 17,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate traffic flow with IPS/CTEP and both EGW working - Regular condition",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + IPS/CTEP - Regular condition",
            "custom_steps": "1. Enable \"egress-footprint-userhash-lb\" and \"ips\" FF on the tenant\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash and so_mark noted for the entire traffic flow and login works as expected.\n4. Iniatiate traffic flow to malware site and validate IPS alerts generated with appropriate actions",
            "custom_expected": "1. Validate \"egress-footprint-userhash-lb\" and \"ips\" FF enabled on the tenant in feature_config.json\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Validate consistent user-hash and so_mark noted for the entire traffic flow and login works as expected.\n4. Iniatiate traffic flow to malware site and validate IPS alerts generated with appropriate actions",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535929,
            "title": "Validate traffic flow with \"egress-footprint-userhash-lb\" enabled, with IPS/CTEP and when serving EGW goes down",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 18,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate traffic flow with \"egress-footprint-userhash-lb\" enabled, with IPS/CTEP and when serving EGW goes down",
            "custom_preconds": "Egress Healthcheck validation + \"egress-footprint-userhash-lb\" enabled + IPS/CTEP - EGW Pinned for some traffic and then pinned EGW goes down",
            "custom_steps": "1. Enable \"egress-footprint-userhash-lb\" and \"ips\" FF on the tenant\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate EGW health check failure and observe existing traffic flow and new flow \n3. Validate consistent user-hash and updated so_mark from EGW2 noted for the entire traffic flow \n4. Iniatiate traffic flow to malware site and validate IPS alerts generated with appropriate actions\n5. Bring EGW1 back online and review user-hash and so_mark value for the traffic flow",
            "custom_expected": "1. Validate \"egress-footprint-userhash-lb\" and \"ips\" FF enabled on the tenant in feature_config.json\n2. Generate traffic flow to login to any domain (google drive/box) and capture so_mark and user-hash\n3. Simulate serving EGW1 health check failure and expected to have new and existing traffic flow served by EGW2\n3. Validate consistent user-hash and updated so_mark from EGW2 noted \n4. Iniatiate traffic flow to malware site and validate IPS alerts generated with appropriate actions\n5. Bring EGW1 back online and review user-hash and so_mark value for the traffic flow updated to EGW1 again",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535930,
            "title": "Validate Egress IP rules for fwmark get wiped out, traffic source IP fall back to proxy default IP",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 19,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Egress IP rules for fwmark get wiped out, traffic source IP fall back to proxy default IP",
            "custom_preconds": "Egress IP rules for fwmark get wiped out; and traffic will use the default source IP on the dppool proxy",
            "custom_steps": "1. Run IP rules  delete fwmark commands on proxy\n2. Initiate traffic connection and observe source IP returned as proxy default IP and NO connection time out",
            "custom_expected": "1. Run IP rules  delete fwmark commands on proxy\n2. Initiate traffic connection and observe source IP returned as proxy default IP and NO connection time out",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535931,
            "title": "ENG-214221 Validate SSL DND policy for SSL upgrade connection",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 2,
            "milestone_id": null,
            "refs": "https://netskope.atlassian.net/browse/ENG-214221",
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 20,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "The problem was observed on the edge-proxy with customer traffic coming from on-premise proxy which performed clear to SSL upgrade in the middle of HTTP transactions. Furthermore, there is a SSL DND policy on the SSL domain. In the customer scenario, there was also DEIP on SSL DND domain. So\r\nHTTP->Request-1:domain:1\r\nCONNECT->SSL->Request-2:domain:2 (to be SSL DND + DEIP)\r\n\r\nProxy maintains alternate destinations for IPS which is used to pick on a round robin basis when connecting to the backend server. Proxy was accidentally using this object for connection from the proxy which performed a SSL upgrade on the existing connection.\r\n\r\nHTTP: Added Proxy-2 IP:8081 to the list (to send to the second hop proxy)\r\nCONNECT->HTTPS: Add domain-2:443 to the list (SSL bypass + DEIP)\r\nSo some requests would correctly use domain:443 from the list and be bypassed (+ DEIP) while some connections would carry Proxy-2 IP:8081 (+ DEIP). The latter connections would be dropped by the EIP gateway and timeout.",
            "custom_preconds": "Use https://github.com/netSkope/dp-tools/blob/master/scripts/socketclientopen.c\r\n\r\nhttps://github.com/netSkope/dp-tools/blob/master/scripts/README\r\n\r\n\r\nFixed in R104",
            "custom_steps": "1. Setup ssl dnd policy for ifconfig.me domain\r\n2. Use above script from one of linux VM which can route traffic to edgensproxy node\r\n3. verify both request [cleartext and ssl upgrade connection] connect to original server and doesn't timeout.\r\n4. Try this multiple times and should have same output.\r\n",
            "custom_expected": "-  verify both request [cleartext and ssl upgrade connection] connect to original server and doesn't timeout.\r\n-  SSL DND hit should have page event generated.\r\n-  Additional tcpdump on edgensproxy : sudo tcpdump -n -i eth0 net 34.160.111.0/24 ; should have 443 packets tcp 3 way handshake as follow:\r\nmvankawala@hiedgensproxy02:~$ sudo tcpdump -n -i eth0 net 34.160.111.0/24\r\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\r\nlistening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes\r\n15:42:53.856020 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [S], seq 614959898, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 6], length 0\r\n15:42:53.862484 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [S.], seq 2933952325, ack 614959899, win 65535, options [mss 1412,nop,nop,sackOK,nop,wscale 8], length 0\r\n15:42:53.862514 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [.], ack 1, win 457, length 0\r\n15:42:53.863075 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [P.], seq 1:398, ack 1, win 457, length 397\r\n15:42:53.872039 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [.], ack 398, win 261, length 0\r\n15:42:53.872917 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [.], seq 1:4237, ack 398, win 261, length 4236\r\n15:42:53.872928 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [.], ack 4237, win 589, length 0\r\n15:42:53.880181 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [P.], seq 4237:4639, ack 398, win 261, length 402\r\n15:42:53.880194 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [.], ack 4639, win 633, length 0\r\n15:42:53.954878 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [P.], seq 398:478, ack 4639, win 633, length 80\r\n15:42:53.964893 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [.], ack 478, win 261, length 0\r\n15:42:54.066496 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [P.], seq 478:577, ack 4639, win 633, length 99\r\n15:42:54.068404 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [.], ack 577, win 261, length 0\r\n15:42:54.111499 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [P.], seq 4639:5560, ack 577, win 261, length 921\r\n15:42:54.111525 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [.], ack 5560, win 677, length 0\r\n15:42:54.955325 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [F.], seq 577, ack 5560, win 677, length 0\r\n15:42:54.958013 IP 34.160.111.145.443 > 172.16.178.193.65256: Flags [F.], seq 5560, ack 578, win 261, length 0\r\n15:42:54.958033 IP 172.16.178.193.65256 > 34.160.111.145.443: Flags [.], ack 5561, win 677, length 0\r\n^C\r\n18 packets captured\r\n18 packets received by filter\r\n0 packets dropped by kernel",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651317,
            "title": "Validate Proxy staged feature flag (egress-ip-policy) - default Enabled (until redesign in review) - In Beta release and going forward",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 41,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Proxy staged feature flag- default enabled",
            "custom_steps": "- Validated file /opt/ns/cfg/staged_config.json with Proxy backend Feature flag marked as true/enabled\r\n {\r\n            \"name\": \"egress-ip-policy\",\r\n            \"data\": {\r\n              \"enabled\": true\r\n            },\r\n            \"apply-globally\": true\r\n        }",
            "custom_expected": "- Validated file /opt/ns/cfg/staged_config.json with Proxy backend staged Feature flag (egress-ip-policy) marked default as enabled (on and after beta release)\r\n {\r\n            \"name\": \"egress-ip-policy\",\r\n            \"data\": {\r\n              \"enabled\": true\r\n            },\r\n            \"apply-globally\": true\r\n        }\r\n- Upon enabling staged feature, mtnsproxy log will show log line:  egress-ip-policy feature set to: 1",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651318,
            "title": "Validate tenant level feature flag (enable_dedicated_egress_ip_policy) - default disabled",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 42,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 0,
            "custom_automated": 0,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Provisioner - tenant feature flag - default disabled",
            "custom_steps": "- Validate upon webui upgrade Settings-> config -> DEI shows existing view [enable/disable]",
            "custom_expected": "- Validate upon webui upgrade Settings-> config -> DEI shows existing view [enable/disable]",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651319,
            "title": "Validate tenant FF enable api (enable_dedicated_egress_ip_policy); dedicate EgressIP FF (existing Ursa FF- \"netskope_dedicated_ips\") enabled",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 43,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Provisioner - tenant feature flag",
            "custom_steps": "- Run Provisioner API to enable new webui FF\ncurl -H 'Content-Type: application/json' -d '{ \"enable_dedicated_egress_ip_policy\": \"1\"}' \"http://provisionervip:6400/client/config?tenantid=<tenant id>\"\n- Verify webui tenant Db -> global_vars Table shows feature enabled\n- Verify proxy tenant level feature config file shows feature enabled.",
            "custom_expected": "- Verify provisioner API result shows success\n- Verify webui Settings-> config -> DEI -> Edit view shows attribute to be configure when existing and new FF enabled\n- Verify tenant based feature_config.json shows feature flag enabled",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1651320,
            "title": "Validate tenant FF disable api; dedicate EgressIP FF (existing Ursa FF \"netskope_dedicated_ips\") enabled",
            "section_id": 114895,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 4,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1686939998,
            "updated_by": 729,
            "updated_on": 1736855996,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 44,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": null,
            "custom_preconds": "Provisioner - tenant feature flag",
            "custom_steps": "- Run Provisioner API to disable new webui FF\ncurl -H 'Content-Type: application/json' -d '{ \"enable_dedicated_egress_ip_policy\": \"0\"}' \"http://provisionervip:6400/client/config?tenantid=<tenant id>\"\n- Verify webui tenant Db -> global_vars Table shows feature disabled\n- Verify proxy tenant level feature config file shows feature disabled.",
            "custom_expected": "- Verify provisioner API result shows success\n- Verify webui Settings-> config -> DEI -> Edit view DOES NOT show attribute to be configure when existing enabled and new FF disabled\n- Validate upon webui upgrade Settings-> config -> DEI shows existing view [enable/disable]\n-  Verify tenant based feature_config.json shows feature flag Disabled",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        }
    ]
}