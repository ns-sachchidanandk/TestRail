{
    "updated_cases": [
        {
            "id": 1535193,
            "title": "Verify Useralert/block for a policy with predefined category which is part of a custom category",
            "section_id": 105395,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328473,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 9,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify block template for a policy with app",
            "custom_preconds": null,
            "custom_steps": "Create a Custom category \"abc\" with predefined categories(Development tools,Cloud Storage,Collaboration)\nCreate a policy app-dropbox, activity-view/upload/download, alert-block\nloginto Drop box and try to upload any file",
            "custom_expected": "The user should be displayed with a block tempalte with categories:\n\"Cloud Storage\" and \"abc\"",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535194,
            "title": "Verify block template for a policy with cutom category",
            "section_id": 105395,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328473,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 10,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 0,
            "custom_deprecatedtestcase": null,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Verify block template for a policy with cutom category",
            "custom_preconds": null,
            "custom_steps": "Create a Custom category \"abc\" with predefined categories(Development tools,Cloud Storage,Collaboration,Entertainment)\n \nCreate a policy1 app-slack, activity-post/invite/join, alert-block\n\nCreate a policy2 category-Entertainment, activity-browse, alert-block\n\nCreate a policy3 with category-Developmental tools,activity -post/send/share, alert -block\n\n1. Try to hit policy1 by logginto slack and posting\n\n2. Try to hit policy2 by browsing netflix.com\n\n3. Try to hit policy3 by sharing something on attalasian",
            "custom_expected": "1. The block alert should be displayed to user containg categories:\n\"Collaboration\" and \"abc\"\n\n2. The block alert should be displayed to user containg categories:\n\"Entertainment\" and \"abc\"\n\n3. The block alert should be displayed to user containg categories:\n\"Developmental Tools\" and \"abc\"",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535912,
            "title": "Validate Egress health check enabled",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 1,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Egress health check enabled in file /opt/ns/common/remote/nsproxy-egress-nat-healthcheck",
            "custom_preconds": "Egress Health check enable validation",
            "custom_steps": "1. Validate file /opt/ns/common/remote/nsproxy-egress-nat-healthcheck on proxy node",
            "custom_expected": "1. File should have \"enabled\": true and 'so-mark-list', 'egress-nat-hosts' fields configured correctly",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535913,
            "title": "Validate both health check hosts are up, traffic sent to both egress gateway in round robin fashion, when \"egress-footprint-userhash-lb\" disabled",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 2,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate both health check hosts are up, traffic sent to both egress gateway in round robin fashion, when \"egress-footprint-userhash-lb\" disabled",
            "custom_preconds": "Egress Health check hosts validation, with \"egress-footprint-userhash-lb\" disabled",
            "custom_steps": "1. Validate healthcheck api (curl -v http://<HC_HOST_IP>:8080/api/v0.1/egw/health ) returns 2xx response for both Egress GWs \n2. Validate traffic to ifconfig.me or other domains receive egress source ip assignment in Round Robin fashion",
            "custom_expected": "1. Validate healthcheck api (curl -v http://:8080/api/v0.1/egw/health ) returns 2xx response for both Egress GWs \n2. Validate traffic to ifconfig.me or other domains receive egress source ip assignment in Round Robin fashion",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535914,
            "title": "Validate both health check hosts are up, traffic sent to egress gateway based on unique user-hash, when \"egress-footprint-userhash-lb\" enabled",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 3,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate both health check hosts are up, traffic sent to egress gateway based on unique user-hash, when \"egress-footprint-userhash-lb\" enabled",
            "custom_preconds": "Egress Health check hosts validation, with \"egress-footprint-userhash-lb\" enabled",
            "custom_steps": "1. Validate healthcheck api (curl -v http://<HC_HOST_IP>:8080/api/v0.1/egw/health ) returns 2xx response, \n2. Validate traffic to ifconfig.me or other domains receive egress source ip assignment based on Unique user-hash",
            "custom_expected": "1. Validate healthcheck api (curl -v http://:8080/api/v0.1/egw/health ) returns 2xx response, \n2. Validate traffic to ifconfig.me or other domains receive egress source ip assignment based on Unique user-hash",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535915,
            "title": "Validate Health check failure for one egress gw, traffic sent to other egressGW host only",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 4,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Health check failure for one egress gw, traffic sent to other egressGW host only",
            "custom_preconds": "Egress Healthcheck validation, when one egress GW down",
            "custom_steps": "1. Simulate Egw health check failure using IP firewall rule for a health check host to drop packet (sudo iptables -A INPUT -s <HC1_HOST_IP> -j DROP)\n2.  Validate healthcheck api (curl -v http://<HC1_HOST_IP>:8080/api/v0.1/egw/health ) returns connection time out on HC1\n3. Validate healthcheck api (curl -v http://<HC2_HOST_IP>:8080/api/v0.1/egw/health ) returns 2xx response on HC2 \n4. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from Egw2 (working) and no connection timed out; Test this for mutiple iterations and expected to receive same IP\n5. Revert IP firewall rule [sudo iptables -D INPUT -s <HC1_HOST_IP> -j DROP]\n5. Validate same steps for other health check hosts API failure\n6. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment in round robin fashion",
            "custom_expected": "1. mtnsproxy logs shows warning logs on Healthcheck FAILURE for HC1\n2.  Validate healthcheck api (curl -v http://:8080/api/v0.1/egw/health ) returns connection time out on HC1\n3. Validate healthcheck api (curl -v http://:8080/api/v0.1/egw/health ) returns 2xx response on HC2 \n4. Validate Traffic to ifconfig.me or other domains (for mutiple iterations) receive egress source ip assignment from Egw2 (working) and no connection timed out; Test this for mutiple iterations and expected to receive same IP\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment in round robin fashion",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535916,
            "title": "Validate Health check failure for egress gw, traffic sent to other egressGW host only",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 5,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Health check failure for one egress gw, traffic sent to other egressGW host only",
            "custom_preconds": "Egress Healthcheck validation, when one egress GW down , when \"egress-footprint-userhash-lb\" enabled",
            "custom_steps": "1. Find unique user-hash and so_mark in a use for a traffic to ifconfig.me or other domain for header combination of [XFF and XAU]\n[curl -k -H'host: ifconfig.me' -H\"x-ns-tenant-id: ${TENANT_ID}\" -H'x-forwarded-for: 1.1.1.1' -H'X-Authenticated-User: mauto@foo.com' http://<proxy_listener>/ip]\n2. Simulate Egw health check failure for the above Egress GW (based on so_mark, for example HC1) using IP firewall rule for a health check host to drop packet (sudo iptables -A INPUT -s <HC1_HOST_IP> -j DROP)\n3.  Validate healthcheck api (curl -v http://<HC1_HOST_IP>:8080/api/v0.1/egw/health ) returns connection time out HC1\n4. Validate healthcheck api (curl -v http://<HC2_HOST_IP>:8080/api/v0.1/egw/health ) returns 2xx response on HC2 \n5. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from other working Egw2 and no connection timed out; Validate the same for muttiple iterations and expected to receive same IP assignement\n6. Validate mtnsproxy logs for new so_mark assignment for the same User-hash [due to HC api failure]\n7. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment fallback to original EGW and review so_mark\n8. Validate same steps for other health check hosts API failure",
            "custom_expected": "1. Find unique user-hash and so_mark in a use for a traffic to ifconfig.me or other domain for header combination of [XFF and XAU]\n[curl -k -H'host: ifconfig.me' -H\"x-ns-tenant-id: ${TENANT_ID}\" -H'x-forwarded-for: 1.1.1.1' -H'X-Authenticated-User: mauto@foo.com' http:///ip]\n2. Simulate Egw health check failure for the above Egressgw(based on so_mark, for example HC1) using IP firewall rule for a health check host to drop packet (sudo iptables -A INPUT -s  -j DROP)\n3.  Validate healthcheck api (curl -v http://:8080/api/v0.1/egw/health ) returns connection time out HC1\n4. Validate healthcheck api (curl -v http://:8080/api/v0.1/egw/health ) returns 2xx response on HC2 \n5. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from other working Egw2 and no connection timed out; Validate the same for muttiple iterations and expected to receive same IP assignement\n6. Validate mtnsproxy logs for new so_mark assignment for the same User-hash [due to HC api failure]\n7. Validate once Egres GW1 back online, both hosts health check api returns 2xx response and Source IP assignment fall back to original EGW\n8. Validate same steps for other health check hosts API failure",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1535917,
            "title": "Validate Egress Healthcheck failure for both Egress GW being down",
            "section_id": 108391,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 350,
            "created_on": 1682328486,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 6,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": null,
            "custom_hack_jira_escalated": null,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Health check failure for both egress GW, traffic sent using proxy IP as Source IP",
            "custom_preconds": "Egress Healthcheck validation, when both Egress GW down",
            "custom_steps": "1. Simulate Egw health check failure for both Egress GWs using IP firewall rule to drop packet (sudo iptables -A INPUT -s <HC1_HOST_IP> -j DROP)\n2.  Validate healthcheck api failure for both Egress GW  (curl -v http://<HC1_HOST_IP>:8080/api/v0.1/egw/health ); returns connection time out \n3. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from proxy default ip assignment\n4. Revert IP firewall rules [sudo iptables -D INPUT -s <HC1_HOST_IP> -j DROP]\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment fallback to original EGW",
            "custom_expected": "1. Simulate Egw health check failure for both Egress GWs using IP firewall rule to drop packet (sudo iptables -A INPUT -s  -j DROP)\n2.  Validate healthcheck api failure for both Egress GW  (curl -v http://:8080/api/v0.1/egw/health ); returns connection time out \n3. Validate Traffic to ifconfig.me or other domains receive egress source ip assignment from proxy default ip assignment\n4. Revert IP firewall rules [sudo iptables -D INPUT -s  -j DROP]\n5. Validate once both Egres GW reachable, both hosts health check api returns 2xx response and Source IP assignment ifallback to original EGW",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1547867,
            "title": "Validate Dedicated Egress ip feature flag is disabled",
            "section_id": 105397,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1683918242,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 21,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Dedicated Egress ip feature flag is disabled",
            "custom_preconds": null,
            "custom_steps": "1. Enable Dedicate egress ip if not already enabled.\r\n2. Try to disable dedicated egress ip footprint feature from settings -> security cloud platform -> configure.\r\n3. route trafic for the tenant and validate what egress IP used [example; verify ifconfig.me]",
            "custom_expected": "1. it should successfully allowed to disable feature flag\r\n2. after feature being disbaled, traffic should use Egress IP as proxy default public IP instead of routing traffic to EGW. ",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        },
        {
            "id": 1559387,
            "title": "Validate Dedicated Egress ip feature flag is enabled",
            "section_id": 105397,
            "template_id": 1,
            "type_id": 6,
            "priority_id": 3,
            "milestone_id": null,
            "refs": null,
            "created_by": 339,
            "created_on": 1684878538,
            "updated_by": 729,
            "updated_on": 1736855992,
            "estimate": null,
            "estimate_forecast": null,
            "suite_id": 921,
            "display_order": 22,
            "is_deleted": 0,
            "case_assignedto_id": null,
            "custom_automation_type": 0,
            "custom_automatable": 1,
            "custom_automated": 1,
            "custom_deprecatedtestcase": false,
            "custom_ui_case": 1,
            "custom_automation_id": null,
            "custom_hack_functional_sub_categories": 1,
            "custom_hack_test_categories": 3,
            "custom_hack_jira_escalated": false,
            "custom_appliance_support": null,
            "custom_sub_component": 48,
            "custom_testrail_bdd_scenario": null,
            "custom_summary": "Validate Provisioner API to enable DEIP feature",
            "custom_preconds": null,
            "custom_steps": "Enable Dedicate egress ip using provisioner api:\r\ncurl -v  -H 'Content-Type: application/json' -d '{\"netskope_dedicated_ips\":\"1\"}'  http://provisioner-pycore-provisioner-tm.fed1mp.nc1.iad0.nsscloud.net/client/config?tenantid=<tenant_id>\r\n\r\n\r\nTry to enable dedicated egress ip footprint feature from settings -> security cloud platform -> configure.\r\nVerify or configure footprint on the tenant:\r\ncurl -X POST \"http://provisioner-pycore-provisioner-tm/egress/footprint\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{ \\\"tenant_id\\\":<tenant-id>, \\\"footprint_id\\\":<footprint_id>, \\\"footprint_name\\\": \\\"proxytest\\\", \\\"enable\\\": true}\"\r\n\r\n\r\nroute traffic for the tenant and validate what egress IP used [example; verify ifconfig.me]",
            "custom_expected": "After enabling feature flag using api and from UI, ifconfig.me should return configured dedicated egress ip.",
            "custom_steps_separated": null,
            "custom_mission": null,
            "custom_goals": null,
            "comments": [],
            "custom_keyword": [],
            "custom_stack_label": []
        }
    ]
}